(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{643:function(t,a,s){"use strict";s.r(a);var e=s(5),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"vue的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue的优点"}},[t._v("#")]),t._v(" Vue的优点")]),t._v(" "),s("ul",[s("li",[t._v("轻量级")]),t._v(" "),s("li",[t._v("速度快")]),t._v(" "),s("li",[t._v("低耦合")]),t._v(" "),s("li",[t._v("可复用性")]),t._v(" "),s("li",[t._v("独立开发")]),t._v(" "),s("li",[t._v("简单易学")]),t._v(" "),s("li",[t._v("文档齐全，且文档为中文文档")])]),t._v(" "),s("h2",{attrs:{id:"渐进式框架的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渐进式框架的理解"}},[t._v("#")]),t._v(" 渐进式框架的理解")]),t._v(" "),s("ul",[s("li",[t._v("主张最少")]),t._v(" "),s("li",[t._v("可以根据不同的需求选择不同的层级")])]),t._v(" "),s("h2",{attrs:{id:"v-if和v-show的相同点和不同点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-if和v-show的相同点和不同点"}},[t._v("#")]),t._v(" v-if和v-show的相同点和不同点")]),t._v(" "),s("ul",[s("li",[t._v("相同点："),s("br"),t._v(" "),s("ul",[s("li",[t._v("都可以控制dom元素的显示与隐藏")])])]),t._v(" "),s("li",[t._v("不同点：\n"),s("ul",[s("li",[s("code",[t._v("v-show")]),t._v("只是改变的display属性，dom元素并未消失，切换时不需要重新渲染页面")]),t._v(" "),s("li",[s("code",[t._v("v-if")]),t._v("直接将dom元素从页面删除，再次切换需要重新渲染页面")])])])]),t._v(" "),s("h2",{attrs:{id:"如何让css只在当前组件中起作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何让css只在当前组件中起作用"}},[t._v("#")]),t._v(" 如何让css只在当前组件中起作用")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("scoped")])])]),t._v(" "),s("h2",{attrs:{id:"keep-alive-keep-alive-的作用是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive-keep-alive-的作用是什么"}},[t._v("#")]),t._v(" "),s("code",[t._v("<keep-alive></keep-alive>")]),t._v("的作用是什么")]),t._v(" "),s("ul",[s("li",[t._v("主要时用于需要频繁切换组件时进行缓存，不需要重新渲染页面")])]),t._v(" "),s("h2",{attrs:{id:"如何获取dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何获取dom"}},[t._v("#")]),t._v(" 如何获取dom")]),t._v(" "),s("p",[t._v("给dom元素加"),s("code",[t._v("ref='refname'")]),t._v("，然后通过"),s("code",[t._v("this.#refs.refname")]),t._v("进行获取dom元素")]),t._v(" "),s("h2",{attrs:{id:"说出几种vue当中的指令及其用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说出几种vue当中的指令及其用法"}},[t._v("#")]),t._v(" 说出几种vue当中的指令及其用法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("v-model/:``v-model")]),t._v("用于表单的双向数据绑定，可以实时修改数据")]),t._v(" "),s("li",[s("code",[t._v("v-on/@")])]),t._v(" "),s("li",[s("code",[t._v("v-html")])]),t._v(" "),s("li",[s("code",[t._v("v-text")])]),t._v(" "),s("li",[s("code",[t._v("v-once")])]),t._v(" "),s("li",[s("code",[t._v("v-if")])]),t._v(" "),s("li",[s("code",[t._v("v-show")])]),t._v(" "),s("li",[s("code",[t._v("v-for")])])]),t._v(" "),s("h2",{attrs:{id:"vue-loader是什么-它的用途是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-loader是什么-它的用途是什么"}},[t._v("#")]),t._v(" vue-loader是什么?它的用途是什么?")]),t._v(" "),s("ul",[s("li",[t._v("vue文件的一个加载器,将template/js/style转换为js模块")]),t._v(" "),s("li",[t._v("用途js可以写es6、style样式")])]),t._v(" "),s("h2",{attrs:{id:"为什么用key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么用key"}},[t._v("#")]),t._v(" 为什么用key")]),t._v(" "),s("ul",[s("li",[t._v("给每个dom元素加上key作为唯一的标识，diff算法可以正确的识别这个节点，使页面渲染更加迅速。")])]),t._v(" "),s("h2",{attrs:{id:"axios及安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#axios及安装"}},[t._v("#")]),t._v(" axios及安装")]),t._v(" "),s("ul",[s("li",[t._v("vue项目中使用axios时需要axios插件")]),t._v(" "),s("li",[t._v("下载方式npm install axios --save")])]),t._v(" "),s("h2",{attrs:{id:"vue-cli项目中src目录每个文件夹和文件的用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli项目中src目录每个文件夹和文件的用法"}},[t._v("#")]),t._v(" vue.cli项目中src目录每个文件夹和文件的用法")]),t._v(" "),s("ul",[s("li",[t._v("components存放组件")]),t._v(" "),s("li",[t._v("app.vue主页面入口")]),t._v(" "),s("li",[t._v("main.js入口文件")]),t._v(" "),s("li",[t._v("assets 存放静态资源文件")])]),t._v(" "),s("h2",{attrs:{id:"分别简述computed和watch的使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分别简述computed和watch的使用场景"}},[t._v("#")]),t._v(" 分别简述computed和watch的使用场景")]),t._v(" "),s("ul",[s("li",[t._v("用官网的一句话说，所有需要用到的计算都应该使用计算属性。多条数据影响一条数据时使用计算属性，使用场景如购物车。")]),t._v(" "),s("li",[t._v("如果时一条数据的更改，影响多条数据时，使用watch，使用场景如搜索框。")])]),t._v(" "),s("h2",{attrs:{id:"v-on可以监听多个方法吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-on可以监听多个方法吗"}},[t._v("#")]),t._v(" v-on可以监听多个方法吗？")]),t._v(" "),s("ul",[s("li",[t._v("可以，比如"),s("code",[t._v("v-on='onclick,onbure'")])])]),t._v(" "),s("h2",{attrs:{id:"nexttick的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nexttick的使用"}},[t._v("#")]),t._v(" $nextTick的使用")]),t._v(" "),s("ul",[s("li",[t._v("data()中的修改后，页面中无法获取data修改后的数据，使用"),s("code",[t._v("$nextTick")]),t._v("时，当data中的数据修改，可以实时的渲染页面")])]),t._v(" "),s("h2",{attrs:{id:"vue组件中data为什么必须是一个函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue组件中data为什么必须是一个函数"}},[t._v("#")]),t._v(" vue组件中data为什么必须是一个函数？")]),t._v(" "),s("ul",[s("li",[t._v("因为javaScript的特性所致。组件中的data写成一个函数，数据以函数返回值的形式定义，这样每次复用组件的时候，都会返回一份新的data，相当于每个组件实例都有自己私有的数据空间，他们值负责各自维护数据，不会造成混乱。而单纯的写成对象形式，就是所有组件实例共用了一个data，这样改一个全部都会修改。")])]),t._v(" "),s("h2",{attrs:{id:"vue在双向数据绑定时如何实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue在双向数据绑定时如何实现的"}},[t._v("#")]),t._v(" vue在双向数据绑定时如何实现的？")]),t._v(" "),s("ul",[s("li",[t._v("vue双向数据绑定时通过数据劫持、组合、发布订阅模式的方式来实现的，也就是说数据和视图同步，数据发生变化，视图跟着变化，视图变化，数据也随之发生改变。")]),t._v(" "),s("li",[t._v("核心：关于vue双向数据绑定，其核心时Object.defineProperty()方法")])]),t._v(" "),s("h2",{attrs:{id:"单页面应用和多页面应用区别及缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单页面应用和多页面应用区别及缺点"}},[t._v("#")]),t._v(" 单页面应用和多页面应用区别及缺点")]),t._v(" "),s("ul",[s("li",[t._v("单页面（SPA），通俗的说就是指只有一个主页面的应用，浏览器一开始就加载所有的js、html、css。所有的页面内容都包含在这个主页面中。但在写的时候，还是分开写，然后再加护的时候由路由程序动态加载，单页面的页面跳转，仅刷新局部资源。多用于PC端。")]),t._v(" "),s("li",[t._v("多页面（MPA），就是一个应用中由多个页面，页面跳转时是整页刷新")]),t._v(" "),s("li",[t._v("单页面的优点：用户体验好，块，内容的改变不需要重新加载整个页面，基于这点SPA对服务器压力较小；前后端分离。")]),t._v(" "),s("li",[t._v("单页面的缺点：不利于SEO；导航不可用，如果一定要导航需要自行实现前进、后退。初次加载时耗时多；页面复杂度提高很多。")])]),t._v(" "),s("h2",{attrs:{id:"路由导航守卫都有哪些钩子函数-说明再什么场景下会触发这些钩子函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由导航守卫都有哪些钩子函数-说明再什么场景下会触发这些钩子函数"}},[t._v("#")]),t._v(" 路由导航守卫都有哪些钩子函数？说明再什么场景下会触发这些钩子函数？")]),t._v(" "),s("ul",[s("li",[t._v("全局守卫\n"),s("ol",[s("li",[s("code",[t._v("router.beforeEach")]),t._v(":全局前置守卫，进入路由之前调用")]),t._v(" "),s("li",[s("code",[t._v("router.afterEach")]),t._v(":全局后置钩子，进入路由之后调用")])])]),t._v(" "),s("li",[t._v("路由组件内的守卫\n"),s("ol",[s("li",[s("code",[t._v("beforeRouteEnter")]),t._v(":在渲染组件的对应路由被验证之前调用")]),t._v(" "),s("li",[s("code",[t._v("beforeRouteUpdate")]),t._v(":在当前路由改变，但是该子组件被复用时调用")]),t._v(" "),s("li",[s("code",[t._v("beforeRouteLeave")]),t._v(":在离开当前路由时调用")])])]),t._v(" "),s("li",[t._v("路由独享守卫\n"),s("ol",[s("li",[s("code",[t._v("beforeEnter")]),t._v(":在进入路由之前触发")])])])]),t._v(" "),s("h2",{attrs:{id:"组件中is可以做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件中is可以做什么"}},[t._v("#")]),t._v(" 组件中is可以做什么？")]),t._v(" "),s("ol",[s("li",[t._v("解决标签固定搭配问题")]),t._v(" "),s("li",[t._v("实现动态组件")])]),t._v(" "),s("h2",{attrs:{id:"v-model是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-model是什么"}},[t._v("#")]),t._v(" v-model是什么？")]),t._v(" "),s("ul",[s("li",[t._v("可以实现表单的元素的双向绑定，指令（v-class v-for v-if v-show v-on）。vue的model层的data属性。")])]),t._v(" "),s("h2",{attrs:{id:"vue中哪些方式可以实现页面之间的传参-且获取到值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue中哪些方式可以实现页面之间的传参-且获取到值"}},[t._v("#")]),t._v(" vue中哪些方式可以实现页面之间的传参，且获取到值")]),t._v(" "),s("ol",[s("li",[t._v("search传参\n"),s("ul",[s("li",[t._v("传递："),s("code",[t._v('<router-link to="/地址?属性名=属性值"><router-link>')])]),t._v(" "),s("li",[t._v("接收："),s("code",[t._v("this.$route.query.属性名")])])])]),t._v(" "),s("li",[t._v("动态路由传参\n"),s("ul",[s("li",[t._v('传递：path:"/地址/变量名" '),s("code",[t._v('<router-link to="/地址/数据值"></router-link>')])]),t._v(" "),s("li",[t._v("接收："),s("code",[t._v("this.$route.params.变量名")])])])]),t._v(" "),s("li",[t._v("本地存储："),s("code",[t._v("setItem() getItem()")])])]),t._v(" "),s("h2",{attrs:{id:"mutations和actions的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mutations和actions的区别"}},[t._v("#")]),t._v(" mutations和actions的区别")]),t._v(" "),s("ul",[s("li",[t._v("mutations是同步的，直接修改state，仓库通过commit调用；")]),t._v(" "),s("li",[t._v("actions可以处理异步，不能修改state，仓库通过dispath调用；")])]),t._v(" "),s("h2",{attrs:{id:"vue中组件之间如何通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue中组件之间如何通信"}},[t._v("#")]),t._v(" vue中组件之间如何通信？")]),t._v(" "),s("ul",[s("li",[t._v("父组件向子组件传参\n"),s("ul",[s("li",[t._v("父组件通过自定义属性传值，子组件通过"),s("code",[t._v("props")]),t._v("接收；")])])]),t._v(" "),s("li",[t._v("子组件向父组件传参\n"),s("ul",[s("li",[t._v("通过触发自定义事件")])])]),t._v(" "),s("li",[t._v("非父子\n"),s("ul",[s("li",[t._v("通过EventBus")]),t._v(" "),s("li",[t._v("vuex")]),t._v(" "),s("li",[t._v("本地存储")])])])]),t._v(" "),s("h2",{attrs:{id:"vuex和本地存储有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex和本地存储有什么区别"}},[t._v("#")]),t._v(" vuex和本地存储有什么区别")]),t._v(" "),s("ol",[s("li",[t._v("vuex数据刷新之后就会小时，本地存储则还在")]),t._v(" "),s("li",[t._v("vuex中的数据可以实时渲染，本地存储则不可")])]),t._v(" "),s("h2",{attrs:{id:"vuex有哪些模块-并说明它们的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex有哪些模块-并说明它们的作用"}},[t._v("#")]),t._v(" vuex有哪些模块，并说明它们的作用")]),t._v(" "),s("ol",[s("li",[t._v("state：vuex的基本数据，用存储变量")]),t._v(" "),s("li",[t._v("getter：从基本数据(state)派生的数据，相当于state的计算属性")]),t._v(" "),s("li",[t._v("mutation：提交更新数据的方法，必须是同步的(如果需要一部使用action。每个mutation都有一个字符串的事件类型(type)和一个回调函数(handler)。回调函数就是我们事件进行状态更新的地方，并且它会接收state作为第一个参数，提交载荷作为第二个参数。")]),t._v(" "),s("li",[t._v("action:和mutations的功能大致相同，不同之处在于：\n"),s("ol",[s("li",[t._v("action的是mutation，而不是直接变更状态。")]),t._v(" "),s("li",[t._v("action可以包含任意异步操作。")])])]),t._v(" "),s("li",[t._v("modules：模块化vuex，可以让每一个模块都拥有自己的state/mutation/action/getters，使得结构非常清晰，方便管理")])]),t._v(" "),s("h2",{attrs:{id:"如何通过路由守卫实现拦截用户没有登录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何通过路由守卫实现拦截用户没有登录"}},[t._v("#")]),t._v(" 如何通过路由守卫实现拦截用户没有登录？")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/login"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/login"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h2",{attrs:{id:"如何实现路由懒加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何实现路由懒加载"}},[t._v("#")]),t._v(" 如何实现路由懒加载")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Index")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../components/index'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"route和-router的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#route和-router的区别"}},[t._v("#")]),t._v(" $route和$router的区别 😃")]),t._v(" "),s("ol",[s("li",[t._v("$route路由信息")]),t._v(" "),s("li",[t._v("$router用来做路由跳转")])]),t._v(" "),s("h2",{attrs:{id:"vue的路由实现-hash模式-和-history模式的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue的路由实现-hash模式-和-history模式的区别"}},[t._v("#")]),t._v(" Vue的路由实现：hash模式 和 history模式的区别")]),t._v(" "),s("ul",[s("li",[t._v("区别： hash模式：\n"),s("ol",[s("li",[t._v("采用的是window.onhashchange事件实现。")]),t._v(" "),s("li",[t._v("可以实现前进 后退 刷新。")]),t._v(" "),s("li",[t._v("比如这个URL：http://www.abc.com/#/hello, hash 的值为#/hello。 它的特点在于：hash 虽然出现URL中，但不会被包含在HTTP请求中， 对后端完全没有影响，因此改变hash不会重新加载页面 history模式：\n"),s("ol",[s("li",[t._v("采用的是利用了HTML5 History Interface 中新增的pushState() 和replaceState() 方法。")]),t._v(" "),s("li",[t._v("可以前进、后退，但是刷新有可能会出现404的报错")]),t._v(" "),s("li",[t._v("前端的url必须和实际向后端发起请求的url 一致，如http://www.abc.com/book/id 。 如果后端缺少对/book/id 的路由处理，将返回404错误。")])])])])])]),t._v(" "),s("h2",{attrs:{id:"怎么定义vue-router的动态路由-怎么获取传过来的动态参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么定义vue-router的动态路由-怎么获取传过来的动态参数"}},[t._v("#")]),t._v(" 怎么定义vue-router的动态路由？怎么获取传过来的动态参数")]),t._v(" "),s("ul",[s("li",[t._v("定义："),s("code",[t._v('path:"/foodId/:id"')])]),t._v(" "),s("li",[t._v("获取："),s("code",[t._v("this.$route.params.id")])])]),t._v(" "),s("h2",{attrs:{id:"请写出vue-router中的组件-并说明它们的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请写出vue-router中的组件-并说明它们的作用"}},[t._v("#")]),t._v(" 请写出vue-router中的组件，并说明它们的作用")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("router-link")]),t._v(" "),s("code",[t._v("router-view")]),t._v(" "),s("code",[t._v("router-link")]),t._v("是路由导航组件，会生成a标签，需要设置to属性；")]),t._v(" "),s("li",[s("code",[t._v("router-view")]),t._v("是路由出口，会根据浏览器地址进行匹配路由规则，并将匹配到的路由规则对应的组件展示在"),s("code",[t._v("router-view")]),t._v("处")])]),t._v(" "),s("h2",{attrs:{id:"vue中数组发生改变了-但是页面没有渲染-怎么办"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue中数组发生改变了-但是页面没有渲染-怎么办"}},[t._v("#")]),t._v(" vue中数组发生改变了，但是页面没有渲染，怎么办 😃")]),t._v(" "),s("ul",[s("li",[t._v("arr.splice() Vue.set() vm.$set()")])]),t._v(" "),s("h2",{attrs:{id:"组件中的data为什么不是一个对象而是一个函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件中的data为什么不是一个对象而是一个函数"}},[t._v("#")]),t._v(" 组件中的data为什么不是一个对象而是一个函数")]),t._v(" "),s("ul",[s("li",[t._v("组件中的data写成一个函数，数据以函数返回值形式定义，这样每复用一次组件，就会返回一份新的data，类似于给每个组件实例创建一个私有的数据空间，让各个组件实例维护各自的数据。而单纯的写成对象形式，就使得所有组件实例共用了一份data，就会造成一个变了全都会变的结果。")])]),t._v(" "),s("h2",{attrs:{id:"vue中第一次页面加载会触发哪几个生命周期钩子函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue中第一次页面加载会触发哪几个生命周期钩子函数"}},[t._v("#")]),t._v(" vue中第一次页面加载会触发哪几个生命周期钩子函数")]),t._v(" "),s("ul",[s("li",[t._v("会触发下面这几个"),s("code",[t._v("beforeCreate")]),t._v(", "),s("code",[t._v("created")]),t._v(", "),s("code",[t._v("beforeMount")]),t._v(", "),s("code",[t._v("mounted")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);