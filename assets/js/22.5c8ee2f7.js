(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{617:function(v,l,_){"use strict";_.r(l);var t=_(5),i=Object(t.a)({},(function(){var v=this,l=v.$createElement,_=v._self._c||l;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"字符串创建"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串创建"}},[v._v("#")]),v._v(" 字符串创建")]),v._v(" "),_("ul",[_("li",[v._v("字面量创建（伪对象）\n"),_("ul",[_("li",[v._v("var str = '我是大蠢包';")])])]),v._v(" "),_("li",[v._v("实例化创建\n"),_("ul",[_("li",[v._v("var str = new String('我是大蠢包');")])])])]),v._v(" "),_("h2",{attrs:{id:"字符串的方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串的方法"}},[v._v("#")]),v._v(" 字符串的方法")]),v._v(" "),_("ul",[_("li",[v._v("length: 字符串的长度")]),v._v(" "),_("li",[v._v("charAt（下标）：根据下标 获取对应的字符")]),v._v(" "),_("li",[v._v("charCodeAt（下标）:根据下标获取对应字符的  ASCII码（unicode码）\n"),_("ul",[_("li",[v._v("A 65---Z 90  a 97 ---z 122   0 48  ---9  57")])])]),v._v(" "),_("li",[v._v("indexOf('字符串a')  在字符串中查找是否包含字符串a  如果有  就 将找到的字符串的第一个字符的下标返回  如果找不到  就返回-1\n"),_("ul",[_("li",[v._v("简单来说  判断是否包含字符串a  是就返回第一个字符下标  否返回-1")]),v._v(" "),_("li",[v._v("该方法找到之后就 结束了 后续字符不再查找")])])]),v._v(" "),_("li",[v._v("lastIndexOf('字符串')  和indexOf一样的功能 只不过时从后向前查找  下标顺序不变")])]),v._v(" "),_("h4",{attrs:{id:"获取字符串中的字符-不改变原字符串"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#获取字符串中的字符-不改变原字符串"}},[v._v("#")]),v._v(" 获取字符串中的字符 （不改变原字符串 ）")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("substring（startIndex, endIndex？ 可选）: 从一个字符串中获取从起始下标开始（包含起始下标） 到 结束下标（不包含结束下标）的字符串")]),v._v(" "),_("ul",[_("li",[v._v("如果 起始下标大于结束下标  会互换位置")]),v._v(" "),_("li",[v._v("如果只有起始下标  就从起始下标获取到字符串的结束")]),v._v(" "),_("li",[v._v("如果下标为负数 会自动转换为 0")])])]),v._v(" "),_("li",[_("p",[v._v("slice(startIndex, endIndex)：从一个字符串中获取从起始下标开始（包含起始下标） 到 结束下标（不包含结束下标）的字符串")]),v._v(" "),_("ul",[_("li",[v._v("如果 起始下标大于结束下标  不会互换位置  所以获取不到字符串")]),v._v(" "),_("li",[v._v("如果只有起始下标  就从起始下标获取到字符串的结束")]),v._v(" "),_("li",[v._v("如果下标为负数  用字符串的length + 该负值  然后在进行获取")])])]),v._v(" "),_("li",[_("p",[v._v("substr(startIndex, length):从起始下标开始 向后获取  多少个字符串")]),v._v(" "),_("ul",[_("li",[v._v("不存在大小互换的问题 因为第二个参数  是获取字符的长度")]),v._v(" "),_("li",[v._v("如果只有起始下标  就从起始下标获取到字符串的结束")]),v._v(" "),_("li",[v._v("首先长度不能为负值  如果起始下标为负值 则使用字符串的length + 该负值  然后在进行获取")])])]),v._v(" "),_("li",[_("p",[v._v("toUpperCase() 转大写")])]),v._v(" "),_("li",[_("p",[v._v("toLowerCase() 转小写")])]),v._v(" "),_("li",[_("p",[v._v("split('标识符')：是一个字符串方法，将一个字符串 根据 标识符 拆分为数组")])]),v._v(" "),_("li",[_("p",[v._v("join('标识符'): 是一个数组方法，将一个数组通过标识符 拼接为字符串")])]),v._v(" "),_("li",[_("p",[v._v("replace(searchVal被替换的字符串, replaceVal 替换的字符串)  返回一个新的替换后的字符串*")])]),v._v(" "),_("li",[_("p",[v._v("trim() 去除字符串两端的空格")])])])])}),[],!1,null,null,null);l.default=i.exports}}]);