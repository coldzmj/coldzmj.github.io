(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{633:function(t,a,e){"use strict";e.r(a);var _=e(5),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"一-相关理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-相关理解"}},[t._v("#")]),t._v(" 一 相关理解")]),t._v(" "),e("h3",{attrs:{id:"_1-spa的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-spa的理解"}},[t._v("#")]),t._v(" 1 SPA的理解")]),t._v(" "),e("ol",[e("li",[t._v("单页Web应用（single page web application，SPA）。")]),t._v(" "),e("li",[t._v("整个应用只有一个完整的页面。")]),t._v(" "),e("li",[t._v("点击页面中的链接不会刷新页面，只会做页面的局部更新。")]),t._v(" "),e("li",[t._v("数据都需要通过ajax请求获取, 并在前端异步展现。")])]),t._v(" "),e("h3",{attrs:{id:"_2-路由的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-路由的理解"}},[t._v("#")]),t._v(" 2 路由的理解")]),t._v(" "),e("ol",[e("li",[t._v("什么是路由?\n"),e("ol",[e("li",[t._v("一个路由就是一个映射关系(key:value)")]),t._v(" "),e("li",[t._v("key为路径, value可能是function或component")])])]),t._v(" "),e("li",[t._v("路由分类\n"),e("ol",[e("li",[t._v("后端路由：\n"),e("ul",[e("li",[t._v("理解： value是function, 用来处理客户端提交的请求。")]),t._v(" "),e("li",[t._v("注册路由： router.get(path, function(req, res))")]),t._v(" "),e("li",[t._v("工作过程：当node接收到一个请求时, 根据请求路径找到匹配的路由, 调用路由中的函数来处理请求, 返回响应数据")])])]),t._v(" "),e("li",[t._v("前端路由：\n"),e("ul",[e("li",[t._v("浏览器端路由，value是component，用于展示页面内容。")]),t._v(" "),e("li",[t._v("注册路由: "),e("Route",{attrs:{path:"/test",component:"{Test}"}})],1),t._v(" "),e("li",[t._v("工作过程：当浏览器的path变为/test时, 当前路由组件就会变为Test组件")])])])])])]),t._v(" "),e("h3",{attrs:{id:"_3-react-router-dom的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-react-router-dom的理解"}},[t._v("#")]),t._v(" 3 react-router-dom的理解")]),t._v(" "),e("ol",[e("li",[t._v("react的一个插件库。")]),t._v(" "),e("li",[t._v("专门用来实现一个SPA应用。")]),t._v(" "),e("li",[t._v("基于react的项目基本都会用到此库。")])]),t._v(" "),e("h2",{attrs:{id:"二-react-router-dom相关api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-react-router-dom相关api"}},[t._v("#")]),t._v(" 二 react-router-dom相关API")]),t._v(" "),e("h3",{attrs:{id:"_1-内置组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-内置组件"}},[t._v("#")]),t._v(" 1 内置组件")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("<BrowserRouter>")])]),t._v(" "),e("li",[e("code",[t._v("<HashRouter>")])]),t._v(" "),e("li",[e("code",[t._v("<Route>")])]),t._v(" "),e("li",[e("code",[t._v("<Redirect>")])]),t._v(" "),e("li",[e("code",[t._v("<Link>")])]),t._v(" "),e("li",[e("code",[t._v("<NavLink>")])]),t._v(" "),e("li",[e("code",[t._v("<Switch>")])])]),t._v(" "),e("h3",{attrs:{id:"_2-其它"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-其它"}},[t._v("#")]),t._v(" 2 其它")]),t._v(" "),e("ol",[e("li",[t._v("history对象")]),t._v(" "),e("li",[t._v("match对象")]),t._v(" "),e("li",[t._v("withRouter函数")])]),t._v(" "),e("h2",{attrs:{id:"三-基本路由使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-基本路由使用"}},[t._v("#")]),t._v(" 三 基本路由使用")]),t._v(" "),e("h3",{attrs:{id:"_1-准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-准备"}},[t._v("#")]),t._v(" 1 准备")]),t._v(" "),e("ol",[e("li",[t._v("下载react-router-dom: "),e("code",[t._v("npm install --save react-router-dom")])]),t._v(" "),e("li",[t._v("引入bootstrap.css: "),e("code",[t._v('<link rel="stylesheet" href="/css/bootstrap.css">')])])])])}),[],!1,null,null,null);a.default=r.exports}}]);